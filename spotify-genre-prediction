{"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9017574,"sourceType":"datasetVersion","datasetId":5433789}],"dockerImageVersionId":30761,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Spotify Genre Prediction \n[Source](#https://www.kaggle.com/datasets/talhazulfiqar426/spotify-features)","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport matplotlib.pyplot as plt\ndatapath = r'/kaggle/input/spotify-features/SpotifyFeatures.csv'\ndf_raw = pd.read_csv(datapath)\ndf_raw.head()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df_raw.shape","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"genre_list = df_raw['genre'].unique()\ngenre_list","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Preprocessing\ndf = df_raw[['genre', 'popularity', 'acousticness','danceability','duration_ms','energy',\t'instrumentalness',\t'key', 'liveness',\t'loudness', 'mode', 'speechiness',\t'tempo','time_signature','valence']]\ndf.info()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Preprocessing\ndf['genre'] = df['genre'].str.replace(\"Children's Music\", \"Childrens Music\")\ndf['genre'].value_counts()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['genre'] = df['genre'].str.replace(\"Childrenâ€™s Music\", \"Childrens Music\")\ndf['genre'].value_counts()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"genre_counts = df['genre'].value_counts()\nplt.figure(figsize=(15, 5))\ngenre_counts.plot(kind='bar', color='skyblue')\nplt.title('Genre Distribution in Spotify Dataset')\nplt.xlabel('Genre')\nplt.ylabel('Count')\nplt.xticks(rotation=25)\nplt.tight_layout()\nfor bar in plt.gca().containers[0]:\n    plt.text(bar.get_x() + bar.get_width() / 2, bar.get_height(), int(bar.get_height()), ha='center', va='bottom')\nplt.show()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Checking out relationships of variables in this dataset\nimport seaborn as sns\nsns.pairplot(df[['popularity', 'acousticness','danceability','duration_ms','energy','instrumentalness', 'liveness',\t'loudness', 'speechiness',\t'tempo','valence']])\nplt.show()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Checking out the correlation matrix\ncorrelation_matrix = df[['popularity', 'acousticness','danceability','duration_ms','energy',\t'instrumentalness', 'liveness',\t'loudness', 'speechiness',\t'tempo','valence']].corr()\nsns.heatmap(correlation_matrix, annot=True, cmap='viridis')\nplt.title('Correlation Heatmap')\nplt.show()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Training a random forest classifier to predict genres\nX= df[['popularity', 'acousticness','danceability','duration_ms','energy',\t'instrumentalness', 'liveness',\t'loudness', 'speechiness',\t'tempo','valence']].values\ny = df['genre'].values\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\nrf_classifier = RandomForestClassifier(n_estimators=100, random_state=42)\nrf_classifier.fit(X_train, y_train)\ny_pred = rf_classifier.predict(X_test)\ncm_rf = confusion_matrix(y_test, y_pred)\n","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(8, 6))\nsns.heatmap(cm_rf, annot=True, fmt='g', cmap='Blues', cbar=False)\nplt.xlabel('Predicted Genre')\nplt.ylabel('True Genre')\nplt.title('Confusion Matrix')\nplt.show()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"accuracy_rf = accuracy_score(y_test, y_pred)\naccuracy_rf","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Closing thoughts\nDue to the number of features as well as number of classes (genres) in this data, the model is struggling to find patterns and achieve a good accuracy. We can experiment with neural networks in the future for better performance.\n\nProject by Mithun Meenakshi S.\n","metadata":{}}]}